// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int         @id @default(autoincrement())
  username              String      @unique
  password              String
  walletBalance         BigInt      @default(0)
  battlepassStatus      Int         @default(0)
  battlepassExpiredDate DateTime?
  bestScore             Int         @default(0)
  createdAt             DateTime    @default(now())
  updatedAt             DateTime    @updatedAt
  UserItem              UserItem[]
  UserQuest             UserQuest[]
}

model Item {
  id        Int        @id @default(autoincrement())
  name      String
  price     BigInt     @default(0)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  UserItem  UserItem[]
}

model UserItem {
  id        Int      @id @default(autoincrement())
  userId    Int
  itemId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  item Item @relation(fields: [itemId], references: [id])

  @@unique([userId, itemId])
}

model UserQuest {
  id        Int      @id @default(autoincrement())
  userId    Int
  questName String
  status    String   @default("in_progress") // in_progress, completed, failed
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}
